@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-Thin-webfont.woff') format('woff');
	font-weight: 100;
	font-style: normal;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-ThinItalic-webfont.woff') format('woff');
	font-weight: 100;
	font-style: italic;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-Light-webfont.woff') format('woff');
	font-weight: 300;
	font-style: normal;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-LightItalic-webfont.woff') format('woff');
	font-weight: 300;
	font-style: italic;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-Regular-webfont.woff') format('woff');
	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-Italic-webfont.woff') format('woff');
	font-weight: normal;
	font-style: italic;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-Medium-webfont.woff') format('woff');
	font-weight: 500;
	font-style: normal;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-MediumItalic-webfont.woff') format('woff');
	font-weight: 500;
	font-style: italic;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-Bold-webfont.woff') format('woff');
	font-weight: bold;
	font-style: normal;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-BoldItalic-webfont.woff') format('woff');
	font-weight: bold;
	font-style: italic;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-Black-webfont.woff') format('woff');
	font-weight: 900;
	font-style: normal;
}

@font-face {
	font-family: 'roboto';
	src: url('../fonts/Roboto-BlackItalic-webfont.woff') format('woff');
	font-weight: 900;
	font-style: italic;
}

$type-ratios: (
	'minorSecond': 1.067,
	'majorSecond': 1.125,
	'minorThird': 1.2,
	'majorThird': 1.25,
	'perfectFourth': 1.333,
	'augmentedFourth': 1.414,
	'perfectFifth': 1.5,
	'goldenRatio': 1.618
);

@function type-ratio($key) {
	@return map-get($type-ratios, $key);
}

$type-base-size: 1rem;

// Select by key of map, or use a custom value
$type-size-ratio: type-ratio('perfectFourth');

$type-levels: 4, 3, 2, 1;

$type-styles: ();
$level-size: $type-base-size;
@each $level in $type-levels {
	$level-size: $level-size * $type-size-ratio;
	$type-styles: map-merge($type-styles, (#{'h'}$level: $level-size));

	h#{$level},
	.h#{$level} {
		font-size: $level-size;
		line-height: calc(2px + 2ex + 2px);
		margin-bottom: 0.65em;

		@if ($type-size-ratio > 1.2) {
			$level-unitless: $level-size / ($level-size * 0 + 1);

			$fluid-reduction: if($level-size > 4, 0.5, 0.33);
			$fluid-min: $level-unitless - ($fluid-reduction * $level-unitless);
			$fluid-min: if($fluid-min > $type-base-size, $fluid-min, 1);

			// Adjust max modifier slightly per level to prevent "same" size
			// or lower levels appaering larger than higher levels
			// 4vw was selected by testing from $type-ratios map, YMMV
			$fluid-scaler: ($level-unitless - $fluid-min) + 4vw;

			font-size: unquote('min(max(#{$fluid-min}rem, #{$fluid-scaler}), #{$level-size})');
		}
	}
}

@function type-style($key) {
	@return map-get($type-styles, $key);
}

p,
li,
h1,
h2,
h3,
h4 {
	word-break: break-word;
	hyphens: auto;
	margin-top: 0;
}

body {
	font-size: $type-base-size;
	font-family: 'roboto';
	font-weight: 300;
	line-height: 1.5;
}
